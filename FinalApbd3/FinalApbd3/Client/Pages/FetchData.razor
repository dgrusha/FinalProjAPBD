@page "/fetchdata"
@using FinalApbd3.Client.Repository
@using FinalApbd3.Shared.DTO
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using FinalApbd3.Shared
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.TreeGrid
@attribute [Authorize]
@inject ICompanyRepository CompanyRepository
<h1>WhishList</h1>

@if (@list.Count == 0)
{
    <p>Loading</p>
}else
{
    <Syncfusion.Blazor.Grids.SfGrid DataSource="@list" AllowPaging="true" AllowSorting="true" Toolbar="@(new List<string>() {"Delete"})">
        
        <GridEditSettings AllowDeleting="true"></GridEditSettings>
        <GridColumns>

            <GridColumn Field=@nameof(CompanyDTOClient.Symbol) 
                        HeaderText="Ticker"
                        TextAlign="TextAlign.Center"
                        Width="100"
                        IsPrimaryKey="true">
            </GridColumn>
            <GridColumn Field=@nameof(CompanyDTOClient.Name) 
                        HeaderText="Name"
                        TextAlign="TextAlign.Center"
                        Width="100">
            </GridColumn>
            <GridColumn Field=@nameof(CompanyDTOClient.Sector) 
                        HeaderText="Sector"
                        TextAlign="TextAlign.Center"
                        Width="100">
            </GridColumn>
            <GridColumn Field=@nameof(CompanyDTOClient.Country) 
                        HeaderText="Country"
                        TextAlign="TextAlign.Center"
                        Width="100">
            </GridColumn>
            <GridColumn Field=@nameof(CompanyDTOClient.Ceo) 
                        HeaderText="Ceo"
                        TextAlign="TextAlign.Center"
                        Width="100">
            </GridColumn>
        </GridColumns>

    </Syncfusion.Blazor.Grids.SfGrid>
}

@code {
    public List<CompanyDTOClient> list = new List<CompanyDTOClient>();



    protected override async Task OnInitializedAsync()
    {
        this.list = (await CompanyRepository.GetInfo());
        StateHasChanged();
    }
}
